version: '3.7'
services:
    postgres:
        image: postgres:10.5
        restart: always
        environment:
          - POSTGRES_USER=postgres
          - POSTGRES_PASSWORD=postgres
        logging:
          options:
            max-size: 10m
            max-file: "3"
        ports:
          - '5432:5432'
        volumes:
          - ./postgres-10-5/postgres-data:/var/lib/postgresql/data
          # copy the sql script to create tables
          - ./postgres-10-5/sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
          # copy the sql script to fill tables
          - ./postgres-10-5/sql/fill_tables.sql:/docker-entrypoint-initdb.d/fill_tables.sql
          # copy the sql script to create tidal user and permissions
          - ./postgres-10-5/sql/tidal_setup.sql:/docker-entrypoint-initdb.d/tidal_setup.sql

    mysql:
        image: mysql:8.0
        restart: always
        environment:
          - MYSQL_ROOT_USER=root
          - MYSQL_ROOT_PASSWORD=root-secret
          - MYSQL_DATABASE=tidal_db
          
        logging:
          options:
            max-size: 10m
            max-file: "3"
        ports:
          - '3306:3306'
        volumes:
          - ./mysql-8/mysql-data:/var/lib/mysql-data/data
          # copy the sql script to create tables
          - ./mysql-8/sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
          # # copy the sql script to fill tables
          - ./mysql-8/sql/fill_tables.sql:/docker-entrypoint-initdb.d/fill_tables.sql
          # - ./mysql-8/sql/fill_tables.sql:/docker-entrypoint-initdb.d/fill_tables.sql
          # copy the sql script to create tidal user and permissions
          - ./mysql-8/sql/tidal_setup.sql:/docker-entrypoint-initdb.d/tidal_setup.sql
    
    mssql:
      image: mcr.microsoft.com/mssql/server:2019-latest
      environment: 
        - SA_PASSWORD=Dev12345
        - ACCEPT_EULA=Y
      ports:
        - 1433:1433
      volumes:
      - ./mssql-2019/sql:/scripts/
      command:
        - /bin/bash
        - -c 
        - |
          # Launch mssql and send to background
          /opt/mssql/bin/sqlservr &
          
          # Wait for it to be available
          echo "Waiting for MS SQL to be available ‚è≥"
          /opt/mssql-tools/bin/sqlcmd -l 30 -S localhost -h-1 -V1 -U sa -P $$SA_PASSWORD -Q "SET NOCOUNT ON SELECT \"YAY WE ARE UP\" , @@servername"
          is_up=$$?
          while [ $$is_up -ne 0 ] ; do 
            echo -e $$(date) 
            /opt/mssql-tools/bin/sqlcmd -l 30 -S localhost -h-1 -V1 -U sa -P $$SA_PASSWORD -Q "SET NOCOUNT ON SELECT \"YAY WE ARE UP\" , @@servername"
            is_up=$$?
            sleep 5 
          done

          # Run the SQL scripts in order
          /opt/mssql-tools/bin/sqlcmd -U SA -P $$SA_PASSWORD -l 30 -e -i /scripts/create_tables.sql
          /opt/mssql-tools/bin/sqlcmd -U SA -P $$SA_PASSWORD -l 30 -e -i /scripts/fill_tables.sql
          /opt/mssql-tools/bin/sqlcmd -U SA -P $$SA_PASSWORD -l 30 -e -i /scripts/tidal_setup.sql
          # So that the container doesn't shut down, sleep this thread
          sleep infinity

        